package com.crimsonlogic.groceriessubbookingsystem.controller;

import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.crimsonlogic.groceriessubbookingsystem.entity.Groceries;
import com.crimsonlogic.groceriessubbookingsystem.service.GroceriesService;

@Controller
@RequestMapping("/groceries")
public class GroceriesController {

    @Autowired
    private GroceriesService groceriesService;

    private static final String UPLOADED_FOLDER = "uploaded/";

    @GetMapping("/add")
    public String showAddForm(Model model) {
        return "addGrocery";
    }

    @PostMapping("/add")
    public String addGrocery(@RequestParam("file") MultipartFile file,
                             @RequestParam("groceryName") String groceryName,
                             @RequestParam("description") String description,
                             @RequestParam("groceryPrice") BigDecimal groceryPrice,
                             @RequestParam("inStock") int inStock,
                             @RequestParam("categoryId") String categoryId,
                             Model model) {

        if (file.isEmpty()) {
            model.addAttribute("message", "Please select a file to upload");
            return "addGrocery";
        }

        try {
            // Save the file on the server
            File dir = new File(UPLOADED_FOLDER);
            if (!dir.exists()) {
                dir.mkdirs();
            }
            String fileName = file.getOriginalFilename();
            File serverFile = new File(dir.getAbsolutePath() + File.separator + fileName);
            file.transferTo(serverFile);

            // Create a new grocery item
            Groceries groceries = new Groceries();
            groceries.setGroceryName(groceryName);
            groceries.setDescription(description);
            groceries.setGrocery_price(groceryPrice);
            groceries.setIn_stock(inStock);
            groceries.setImageURL(fileName);
            // Set category (you may need to retrieve category by ID if you have a Category entity)
            // groceries.setCategory(category);

            groceriesService.save(groceries);

            model.addAttribute("message", "Grocery item added successfully");

        } catch (IOException e) {
            e.printStackTrace();
            model.addAttribute("message", "Failed to upload '" + file.getOriginalFilename() + "'");
        }

        return "addGrocery";
    }

    @GetMapping("/list")
    public String listGroceries(Model model) {
        List<Groceries> groceriesList = groceriesService.getAllGroceries();
        model.addAttribute("groceries", groceriesList);
        return "listGroceries";
    }
}
