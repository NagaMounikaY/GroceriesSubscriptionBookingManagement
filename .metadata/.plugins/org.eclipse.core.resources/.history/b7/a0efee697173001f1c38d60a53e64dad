package com.crimsonlogic.groceriessubbookingsystem.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.crimsonlogic.groceriessubbookingsystem.entity.Users;
import com.crimsonlogic.groceriessubbookingsystem.repository.UserRepository;

import java.util.Optional;

@Service
public class UserService {

    private final UserRepository userRepository;
    private final PasswordEncoder passwordEncoder;

    @Autowired
    public UserService(UserRepository userRepository, PasswordEncoder passwordEncoder) {
        this.userRepository = userRepository;
        this.passwordEncoder = passwordEncoder;
    }

    @Transactional
    public void registerUser(Users user) {
        user.setUserPassword(passwordEncoder.encode(user.getUserPassword()));
        userRepository.save(user);
    }

    public Optional<Users> loginUser(String email, String password) {
        Optional<Users> userOptional = userRepository.findByUserEmail(email);
        if (userOptional.isPresent()) {
            Users user = userOptional.get();
            if (passwordEncoder.matches(password, user.getUserPassword())) {
                return Optional.of(user);
            }
        }
        return Optional.empty();
    }

    public Optional<Users> getUserById(String userId) {
        return userRepository.findById(userId);
    }

    @Transactional
    public void updateUser(String userId, Users updatedUser) {
        if (userRepository.existsById(userId)) {
            updatedUser.setUser_id(userId);
            userRepository.save(updatedUser);
        }
    }
}
