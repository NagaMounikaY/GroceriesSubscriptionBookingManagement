package com.crimsonlogic.groceriessubbookingsystem.controller;

import com.crimsonlogic.groceriessubbookingsystem.entity.Category;
import com.crimsonlogic.groceriessubbookingsystem.entity.Groceries;
import com.crimsonlogic.groceriessubbookingsystem.service.CategoryService;
import com.crimsonlogic.groceriessubbookingsystem.service.GroceriesService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;

@Controller
@RequestMapping("/groceries")
public class GroceriesController {

    @Autowired
    private GroceriesService groceriesService;

    @Autowired
    private CategoryService categoryService;

    private static final String UPLOADED_FOLDER = "uploaded/";

    @GetMapping("/add")
    public String showAddForm(Model model) {
        List<Category> categories = categoryService.getAllCategories(); // Fetch all categories
        model.addAttribute("categories", categories);
        return "add-grocery";
    }

    @PostMapping("/add")
    public String addGrocery(@RequestParam("imageURL") MultipartFile file,
                             @RequestParam("groceryName") String groceryName,
                             @RequestParam("description") String description,
                             @RequestParam("grocery_price") BigDecimal groceryPrice,
                             @RequestParam("in_stock") int inStock,
                             @RequestParam("amount") BigDecimal amount,
                             @RequestParam("category_id") String categoryId, // Changed to String to match entity ID type
                             Model model) {

        if (file.isEmpty()) {
            model.addAttribute("message", "Please select a file to upload");
            return "add-grocery";
        }

        try {
            // Save the file on the server
            File dir = new File(UPLOADED_FOLDER);
            if (!dir.exists()) {
                dir.mkdirs();
            }
            String fileName = file.getOriginalFilename();
            File serverFile = new File(dir.getAbsolutePath() + File.separator + fileName);
            file.transferTo(serverFile);

            // Retrieve the selected category
            Category category = categoryService.getCategoryById(categoryId);

            // Create a new grocery item
            Groceries groceries = new Groceries();
            groceries.setGroceryName(groceryName);
            groceries.setDescription(description);
            groceries.setGrocery_price(groceryPrice);
            groceries.setIn_stock(inStock);
            groceries.setAmount(amount);
            groceries.setImageURL(fileName);
            groceries.setCategory(category); // Set the selected category

            groceriesService.saveGrocery(groceries);

            model.addAttribute("message", "Grocery item added successfully");

        } catch (IOException e) {
            e.printStackTrace();
            model.addAttribute("message", "Failed to upload '" + file.getOriginalFilename() + "'");
        }

        return "add-grocery";
    }

    @GetMapping("/list")
    public String listGroceries(Model model) {
        List<Groceries> groceriesList = groceriesService.getAllGroceries();
        model.addAttribute("groceries", groceriesList);
        return "groceries";
    }
}
