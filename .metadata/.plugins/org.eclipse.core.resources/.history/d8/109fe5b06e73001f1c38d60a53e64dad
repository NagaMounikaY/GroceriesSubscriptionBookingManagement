import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

@Service
public class UserService {

    @Autowired
    private UserRepository userRepository;

    private PasswordEncoder passwordEncoder = new BCryptPasswordEncoder();

    public void registerUser(Users user) {
        // Encrypt the password before saving
        user.setUserPassword(passwordEncoder.encode(user.getUserPassword()));
        userRepository.save(user);
    }

    public Optional<Users> loginUser(String email, String password) {
        Optional<Users> userOptional = userRepository.findByUserEmail(email);
        if (userOptional.isPresent()) {
            Users user = userOptional.get();
            // Check the password matches
            if (passwordEncoder.matches(password, user.getUserPassword())) {
                return Optional.of(user);
            }
        }
        return Optional.empty();
    }

    public Optional<Users> getUserById(String userId) {
        return userRepository.findById(userId);
    }

    public void updateUser(String userId, Users updatedUser) {
        if (userRepository.existsById(userId)) {
            updatedUser.setUser_id(userId);
            userRepository.save(updatedUser);
        }
    }
}
