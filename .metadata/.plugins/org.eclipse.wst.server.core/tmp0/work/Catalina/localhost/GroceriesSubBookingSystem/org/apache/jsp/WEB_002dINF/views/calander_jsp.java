/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-09-17 13:45:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.crimsonlogic.groceriessubbookingsystem.entity.Users;

public final class calander_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/MileStone-Project2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/GroceriesSubBookingSystem/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1724994395215L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.crimsonlogic.groceriessubbookingsystem.entity.Users");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Subscription Calendar</title>\r\n");
      out.write("<link\r\n");
      out.write("	href='https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.css'\r\n");
      out.write("	rel='stylesheet' />\r\n");
      out.write("<script\r\n");
      out.write("	src='https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.js'></script>\r\n");
      out.write("<script\r\n");
      out.write("	src='https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/locales-all.min.js'></script>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("#calendar {\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	max-width: 800px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	height: 500px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".daily-event {\r\n");
      out.write("	background-color: #84e430 !important;\r\n");
      out.write("	border-color: #84e430 !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".weekly-event {\r\n");
      out.write("	background-color: #94daee !important;\r\n");
      out.write("	border-color: #94daee !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".monthly-event {\r\n");
      out.write("	background-color: #f7b7a3 !important;\r\n");
      out.write("	border-color: #f7b7a3 !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".fc-event {\r\n");
      out.write("	border-radius: 0 !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".cancelled-event {\r\n");
      out.write("	background-color: #d3d3d3 !important;\r\n");
      out.write("	border-color: #d3d3d3 !important;\r\n");
      out.write("	text-decoration: line-through;\r\n");
      out.write("	opacity: 0.6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button-container {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".legend {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".legend div {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	margin: 0 15px;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".legend .color-box {\r\n");
      out.write("	width: 20px;\r\n");
      out.write("	height: 20px;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<br>\r\n");
      out.write("\r\n");
      out.write("	<!-- Legend for color coding -->\r\n");
      out.write("	<div class=\"legend\">\r\n");
      out.write("		<div>\r\n");
      out.write("			<div class=\"color-box daily-event\"></div>\r\n");
      out.write("			Daily\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<div class=\"color-box weekly-event\"></div>\r\n");
      out.write("			Weekly\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<div class=\"color-box monthly-event\"></div>\r\n");
      out.write("			Monthly\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<div class=\"color-box cancelled-event\"></div>\r\n");
      out.write("			Cancelled\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div id='calendar'></div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Modal for displaying and updating status -->\r\n");
      out.write("	<div class=\"modal fade\" id=\"updateStatusModal\" tabindex=\"-1\"\r\n");
      out.write("		role=\"dialog\" aria-labelledby=\"updateStatusModalLabel\"\r\n");
      out.write("		aria-hidden=\"true\">\r\n");
      out.write("		<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h5 class=\"modal-title\" id=\"updateStatusModalLabel\">Subscription\r\n");
      out.write("						Details</h5>\r\n");
      out.write("					<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("						aria-label=\"Close\">\r\n");
      out.write("						<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("					</button>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					<p>\r\n");
      out.write("						<strong>Item:</strong> <span id=\"eventTitle\"></span>\r\n");
      out.write("					</p>\r\n");
      out.write("					<p>\r\n");
      out.write("						<strong>Frequency:</strong> <span id=\"frequency\"></span>\r\n");
      out.write("					</p>\r\n");
      out.write("					<p>\r\n");
      out.write("						<strong>Amount:</strong> <span id=\"amount\"></span>\r\n");
      out.write("					</p>\r\n");
      out.write("					<p>\r\n");
      out.write("						<strong>Quantity:</strong> <span id=\"quantity\"></span>\r\n");
      out.write("					</p>\r\n");
      out.write("					<p>\r\n");
      out.write("						<strong>Status:</strong> <span id=\"status\"></span>\r\n");
      out.write("					</p>\r\n");
      out.write("					<hr>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"updateStatus\">Update Status:</label> <select\r\n");
      out.write("							class=\"form-control\" id=\"updateStatus\" name=\"updateStatus\">\r\n");
      out.write("							<option value=\"\">-- Select Status --</option>\r\n");
      out.write("							<option value=\"Cancelled\">Cancelled</option>\r\n");
      out.write("							<option value=\"NotDelivered\">Not Delivered</option>\r\n");
      out.write("						</select>\r\n");
      out.write("					</div>\r\n");
      out.write("					<button id=\"updateStatusButton\" class=\"btn btn-primary\">Update\r\n");
      out.write("						Status</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Modal for showing result messages -->\r\n");
      out.write("	<div class=\"modal fade\" id=\"resultMessageModal\" tabindex=\"-1\"\r\n");
      out.write("		role=\"dialog\" aria-labelledby=\"resultMessageModalLabel\"\r\n");
      out.write("		aria-hidden=\"true\">\r\n");
      out.write("		<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h5 class=\"modal-title\" id=\"resultMessageModalLabel\">Status\r\n");
      out.write("						Update</h5>\r\n");
      out.write("					<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("						aria-label=\"Close\">\r\n");
      out.write("						<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("					</button>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					<div id=\"resultMessage\" class=\"alert\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"modal-footer\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("						data-dismiss=\"modal\">Close</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"button-container\">\r\n");
      out.write("		<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/groceries/list\"\r\n");
      out.write("			class=\"btn btn-secondary\">Continue Shopping</a>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		document\r\n");
      out.write("				.addEventListener(\r\n");
      out.write("						'DOMContentLoaded',\r\n");
      out.write("						function() {\r\n");
      out.write("							var calendarEl = document\r\n");
      out.write("									.getElementById('calendar');\r\n");
      out.write("\r\n");
      out.write("							var calendar = new FullCalendar.Calendar(\r\n");
      out.write("									calendarEl,\r\n");
      out.write("									{\r\n");
      out.write("										initialView : 'dayGridMonth',\r\n");
      out.write("										events : {\r\n");
      out.write("											url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/subscription/api/subscriptions',\r\n");
      out.write("											method : 'GET',\r\n");
      out.write("											failure : function(response) {\r\n");
      out.write("												console\r\n");
      out.write("														.error(\r\n");
      out.write("																'Error fetching events:',\r\n");
      out.write("																response);\r\n");
      out.write("											}\r\n");
      out.write("										},\r\n");
      out.write("										eventClassNames : function(arg) {\r\n");
      out.write("											var frequency = arg.event.extendedProps.frequency;\r\n");
      out.write("											var status = arg.event.extendedProps.status;\r\n");
      out.write("\r\n");
      out.write("											var baseClass = '';\r\n");
      out.write("											switch (frequency) {\r\n");
      out.write("											case 'daily':\r\n");
      out.write("												baseClass = 'daily-event';\r\n");
      out.write("												break;\r\n");
      out.write("											case 'weekly':\r\n");
      out.write("												baseClass = 'weekly-event';\r\n");
      out.write("												break;\r\n");
      out.write("											case 'monthly':\r\n");
      out.write("												baseClass = 'monthly-event';\r\n");
      out.write("												break;\r\n");
      out.write("											}\r\n");
      out.write("\r\n");
      out.write("											if (status === 'Cancelled') {\r\n");
      out.write("												return [ baseClass,\r\n");
      out.write("														'cancelled-event' ];\r\n");
      out.write("											}\r\n");
      out.write("\r\n");
      out.write("											return [ baseClass ];\r\n");
      out.write("										},\r\n");
      out.write("										eventClick : function(info) {\r\n");
      out.write("											document\r\n");
      out.write("													.getElementById('eventTitle').innerText = info.event.title;\r\n");
      out.write("											document\r\n");
      out.write("													.getElementById('frequency').innerText = info.event.extendedProps.frequency;\r\n");
      out.write("											document.getElementById('amount').innerText = info.event.extendedProps.amount;\r\n");
      out.write("											document.getElementById('quantity').innerText = info.event.extendedProps.quantity;\r\n");
      out.write("											document.getElementById('status').innerText = info.event.extendedProps.status;\r\n");
      out.write("\r\n");
      out.write("											document\r\n");
      out.write("													.getElementById('updateStatus').value = ''; // Reset the status dropdown\r\n");
      out.write("											document\r\n");
      out.write("													.getElementById('updateStatusButton').dataset.eventId = info.event.id; // Store event ID for update\r\n");
      out.write("											$('#updateStatusModal').modal(\r\n");
      out.write("													'show');\r\n");
      out.write("										},\r\n");
      out.write("										locale : 'en',\r\n");
      out.write("										contentHeight : 'auto'\r\n");
      out.write("									});\r\n");
      out.write("\r\n");
      out.write("							calendar.render();\r\n");
      out.write("\r\n");
      out.write("							// Handle status update\r\n");
      out.write("							document\r\n");
      out.write("									.getElementById('updateStatusButton')\r\n");
      out.write("									.addEventListener(\r\n");
      out.write("											'click',\r\n");
      out.write("											function() {\r\n");
      out.write("												var newStatus = document\r\n");
      out.write("														.getElementById('updateStatus').value;\r\n");
      out.write("												var eventId = this.dataset.eventId;\r\n");
      out.write("\r\n");
      out.write("												if (!newStatus) {\r\n");
      out.write("													showResultMessage(\r\n");
      out.write("															'Please select a status.',\r\n");
      out.write("															'danger');\r\n");
      out.write("													return;\r\n");
      out.write("												}\r\n");
      out.write("\r\n");
      out.write("												var xhr = new XMLHttpRequest();\r\n");
      out.write("												xhr\r\n");
      out.write("														.open(\r\n");
      out.write("																'POST',\r\n");
      out.write("																'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/subscription/update-status',\r\n");
      out.write("																true);\r\n");
      out.write("												xhr\r\n");
      out.write("														.setRequestHeader(\r\n");
      out.write("																'Content-Type',\r\n");
      out.write("																'application/x-www-form-urlencoded');\r\n");
      out.write("\r\n");
      out.write("												xhr.onload = function() {\r\n");
      out.write("													if (xhr.status >= 200\r\n");
      out.write("															&& xhr.status < 300) {\r\n");
      out.write("														var response = JSON\r\n");
      out.write("																.parse(xhr.responseText);\r\n");
      out.write("														var message = '';\r\n");
      out.write("														var alertType = 'success';\r\n");
      out.write("\r\n");
      out.write("														if (response.success) {\r\n");
      out.write("															if (newStatus === 'Cancelled') {\r\n");
      out.write("																message = 'Your subscription has been cancelled and your amount has been credited to your account.';\r\n");
      out.write("															} else {\r\n");
      out.write("																message = 'Subscription status updated successfully.';\r\n");
      out.write("															}\r\n");
      out.write("														} else {\r\n");
      out.write("															message = 'Failed to update status: '\r\n");
      out.write("																	+ response.message;\r\n");
      out.write("															alertType = 'danger';\r\n");
      out.write("														}\r\n");
      out.write("\r\n");
      out.write("														showResultMessage(\r\n");
      out.write("																message,\r\n");
      out.write("																alertType);\r\n");
      out.write("													} else {\r\n");
      out.write("														showResultMessage(\r\n");
      out.write("																'An error occurred while updating the status.',\r\n");
      out.write("																'danger');\r\n");
      out.write("													}\r\n");
      out.write("												};\r\n");
      out.write("\r\n");
      out.write("												xhr\r\n");
      out.write("														.send('eventId='\r\n");
      out.write("																+ encodeURIComponent(eventId)\r\n");
      out.write("																+ '&status='\r\n");
      out.write("																+ encodeURIComponent(newStatus));\r\n");
      out.write("											});\r\n");
      out.write("\r\n");
      out.write("							function showResultMessage(message, type) {\r\n");
      out.write("								var resultMessage = document\r\n");
      out.write("										.getElementById('resultMessage');\r\n");
      out.write("								resultMessage.innerHTML = message;\r\n");
      out.write("								resultMessage.className = 'alert alert-' + type;\r\n");
      out.write("								$('#resultMessageModal').modal('show');\r\n");
      out.write("							}\r\n");
      out.write("						});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
