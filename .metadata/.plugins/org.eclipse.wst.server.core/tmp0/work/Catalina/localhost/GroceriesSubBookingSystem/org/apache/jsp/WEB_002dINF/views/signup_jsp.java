/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-09-17 14:18:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.crimsonlogic.groceriessubbookingsystem.entity.Users;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/MileStone-Project2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/GroceriesSubBookingSystem/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1724994395215L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.crimsonlogic.groceriessubbookingsystem.entity.Users");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Sign Up</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"styles.css\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* General Reset */\r\n");
      out.write("* {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	font-family: Arial, sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Body Styles */\r\n");
      out.write("body {\r\n");
      out.write("	font-family: Arial, sans-serif;\r\n");
      out.write("	background-image:\r\n");
      out.write("		url('https://img.freepik.com/premium-photo/grocery-backgrounds_670382-182583.jpg');\r\n");
      out.write("	background-size: cover;\r\n");
      out.write("	background-repeat: no-repeat;\r\n");
      out.write("	background-attachment: fixed;\r\n");
      out.write("	background-position: center center;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	min-height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Main Content Wrapper */\r\n");
      out.write(".content-wrapper {\r\n");
      out.write("	flex: 1;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Sign-Up Form */\r\n");
      out.write(".signup-form {\r\n");
      out.write("	background: rgba(255, 255, 255, 0.9);\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	border-radius: 8px;\r\n");
      out.write("	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	max-width: 400px;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".signup-form h1 {\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	font-size: 1.5em;\r\n");
      out.write("	color: #333;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group {\r\n");
      out.write("	margin-bottom: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label {\r\n");
      out.write("	display: block;\r\n");
      out.write("	margin-bottom: 5px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	color: #555;\r\n");
      out.write("	font-size: 0.9em; /* Adjust font size for labels */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label.required::after {\r\n");
      out.write("	content: \" *\";\r\n");
      out.write("	color: red; /* Color of the asterisk */\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"text\"], input[type=\"email\"], input[type=\"password\"], select\r\n");
      out.write("	{\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	font-size: 0.9em;\r\n");
      out.write("	color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	background: rgba(56, 51, 37, 0.8); /* Updated rgba color */\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	font-size: 1em;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button:hover {\r\n");
      out.write("	background: rgba(56, 51, 37, 1); /* Less transparent on hover */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".links {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-top: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".links a {\r\n");
      out.write("	color: #007BFF;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".links a:hover {\r\n");
      out.write("	text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error-message {\r\n");
      out.write("	color: red;\r\n");
      out.write("	font-size: 0.8em;\r\n");
      out.write("	margin-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Footer Styles */\r\n");
      out.write("footer {\r\n");
      out.write("	background: rgba(255, 255, 255, 0.9);\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Responsive Design */\r\n");
      out.write("@media ( max-width : 768px) {\r\n");
      out.write("	.signup-form {\r\n");
      out.write("		padding: 15px;\r\n");
      out.write("	}\r\n");
      out.write("	.signup-form h1 {\r\n");
      out.write("		font-size: 1.2em;\r\n");
      out.write("	}\r\n");
      out.write("	label {\r\n");
      out.write("		font-size: 0.8em; /* Smaller font size for labels on mobile */\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- Header Section -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<!-- Main Content Wrapper -->\r\n");
      out.write("	<div class=\"content-wrapper\">\r\n");
      out.write("		<!-- Sign-Up Form -->\r\n");
      out.write("		<div class=\"signup-form\">\r\n");
      out.write("			<h1>Create an Account</h1>\r\n");
      out.write("			<form id=\"signupForm\"\r\n");
      out.write("				action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/users/signup\"\r\n");
      out.write("				method=\"post\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"user_Name\" class=\"required\">User Name</label> <input\r\n");
      out.write("						type=\"text\" id=\"user_Name\" name=\"user_Name\" required>\r\n");
      out.write("					<div id=\"user_NameError\" class=\"error-message\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"userMobileNumber\" class=\"required\">Mobile</label> <input\r\n");
      out.write("						type=\"text\" id=\"userMobileNumber\" name=\"userMobileNumber\" required>\r\n");
      out.write("					<div id=\"userMobileNumberError\" class=\"error-message\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"userEmail\" class=\"required\">Email Address</label> <input\r\n");
      out.write("						type=\"email\" id=\"userEmail\" name=\"userEmail\" required>\r\n");
      out.write("					<div id=\"userEmailError\" class=\"error-message\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"userPassword\" class=\"required\">Password</label> <input\r\n");
      out.write("						type=\"password\" id=\"userPassword\" name=\"userPassword\" required>\r\n");
      out.write("					<div id=\"userPasswordError\" class=\"error-message\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label for=\"confirmPassword\" class=\"required\">Confirm\r\n");
      out.write("						Password</label> <input type=\"password\" id=\"confirmPassword\"\r\n");
      out.write("						name=\"confirmPassword\" required>\r\n");
      out.write("					<div id=\"confirmPasswordError\" class=\"error-message\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<button type=\"submit\">Sign Up</button>\r\n");
      out.write("			</form>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"links\">\r\n");
      out.write("				<p>\r\n");
      out.write("					Already have an account? <a\r\n");
      out.write("						href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/users/login\">Login\r\n");
      out.write("						here</a>\r\n");
      out.write("				</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Footer Section -->\r\n");
      out.write("	<footer>\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	</footer>\r\n");
      out.write("\r\n");
      out.write("	<!-- JavaScript for Validation -->\r\n");
      out.write("	<script>\r\n");
      out.write("		function validateField(id, value, regex, minLength, maxLength, errorMsg) {\r\n");
      out.write("			let errorElement = document.getElementById(id + 'Error');\r\n");
      out.write("			if (!value) {\r\n");
      out.write("				errorElement.textContent = \"This field is required\";\r\n");
      out.write("				return false;\r\n");
      out.write("			} else if (minLength && value.length < minLength) {\r\n");
      out.write("				errorElement.textContent = `Minimum length is 3 characters`;\r\n");
      out.write("				return false;\r\n");
      out.write("			} else if (maxLength && value.length > maxLength) {\r\n");
      out.write("				errorElement.textContent = `Maximum length is 50 characters`;\r\n");
      out.write("				return false;\r\n");
      out.write("			} else if (regex && !regex.test(value)) {\r\n");
      out.write("				errorElement.textContent = errorMsg;\r\n");
      out.write("				return false;\r\n");
      out.write("			} else {\r\n");
      out.write("				errorElement.textContent = \"\";\r\n");
      out.write("				return true;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		function validatePassword(password) {\r\n");
      out.write("			return {\r\n");
      out.write("				lengthValid : password.length >= 8,\r\n");
      out.write("				containsDigit : /[0-9]/.test(password),\r\n");
      out.write("				containsUpper : /[A-Z]/.test(password),\r\n");
      out.write("				containsLower : /[a-z]/.test(password),\r\n");
      out.write("				containsSpecial : /[@$!%*?&]/.test(password)\r\n");
      out.write("			// Special character requirement\r\n");
      out.write("			};\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		document\r\n");
      out.write("				.getElementById('user_Name')\r\n");
      out.write("				.addEventListener(\r\n");
      out.write("						'input',\r\n");
      out.write("						function() {\r\n");
      out.write("							let value = this.value.trim();\r\n");
      out.write("							validateField('user_Name', value, /^[A-Za-z]+$/, 3,\r\n");
      out.write("									50,\r\n");
      out.write("									\"User Name must be between 3 and 50 characters long and contain only letters\");\r\n");
      out.write("						});\r\n");
      out.write("\r\n");
      out.write("		document\r\n");
      out.write("				.getElementById('userMobileNumber')\r\n");
      out.write("				.addEventListener(\r\n");
      out.write("						'input',\r\n");
      out.write("						function() {\r\n");
      out.write("							let value = this.value.trim();\r\n");
      out.write("							validateField('userMobileNumber', value,\r\n");
      out.write("									/^[6-9][0-9]{9}$/, null, null,\r\n");
      out.write("									\"Mobile number must start with 6, 7, 8, or 9 and be exactly 10 digits long\");\r\n");
      out.write("						});\r\n");
      out.write("\r\n");
      out.write("		document.getElementById('userEmail').addEventListener(\r\n");
      out.write("				'input',\r\n");
      out.write("				function() {\r\n");
      out.write("					let value = this.value.trim();\r\n");
      out.write("					validateField('userEmail', value,\r\n");
      out.write("							/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, null, null,\r\n");
      out.write("							\"Enter a valid email address\");\r\n");
      out.write("				});\r\n");
      out.write("\r\n");
      out.write("		document.getElementById('userRole').addEventListener(\r\n");
      out.write("				'change',\r\n");
      out.write("				function() {\r\n");
      out.write("					let value = this.value.trim();\r\n");
      out.write("					validateField('userRole', value, null, null, null,\r\n");
      out.write("							\"Please select your role\");\r\n");
      out.write("				});\r\n");
      out.write("\r\n");
      out.write("		document\r\n");
      out.write("				.getElementById('userPassword')\r\n");
      out.write("				.addEventListener(\r\n");
      out.write("						'input',\r\n");
      out.write("						function() {\r\n");
      out.write("							let value = this.value;\r\n");
      out.write("							let validation = validatePassword(value);\r\n");
      out.write("							let errorElement = document\r\n");
      out.write("									.getElementById('userPasswordError');\r\n");
      out.write("\r\n");
      out.write("							if (!value) {\r\n");
      out.write("								errorElement.textContent = \"Please enter a password\";\r\n");
      out.write("							} else if (!validation.lengthValid) {\r\n");
      out.write("								errorElement.textContent = \"Password must be at least 8 characters long\";\r\n");
      out.write("							} else if (!validation.containsDigit) {\r\n");
      out.write("								errorElement.textContent = \"Password must include at least one digit\";\r\n");
      out.write("							} else if (!validation.containsUpper) {\r\n");
      out.write("								errorElement.textContent = \"Password must include at least one uppercase letter\";\r\n");
      out.write("							} else if (!validation.containsLower) {\r\n");
      out.write("								errorElement.textContent = \"Password must include at least one lowercase letter\";\r\n");
      out.write("							} else if (!validation.containsSpecial) {\r\n");
      out.write("								errorElement.textContent = \"Password must include at least one special character (@, $, !, %, *, ?, &)\";\r\n");
      out.write("							} else {\r\n");
      out.write("								errorElement.textContent = \"\";\r\n");
      out.write("							}\r\n");
      out.write("						});\r\n");
      out.write("\r\n");
      out.write("		document\r\n");
      out.write("				.getElementById('confirmPassword')\r\n");
      out.write("				.addEventListener(\r\n");
      out.write("						'input',\r\n");
      out.write("						function() {\r\n");
      out.write("							let password = document\r\n");
      out.write("									.getElementById('userPassword').value;\r\n");
      out.write("							let confirmPassword = this.value;\r\n");
      out.write("							let errorElement = document\r\n");
      out.write("									.getElementById('confirmPasswordError');\r\n");
      out.write("\r\n");
      out.write("							if (confirmPassword !== password) {\r\n");
      out.write("								errorElement.textContent = \"Passwords do not match\";\r\n");
      out.write("							} else {\r\n");
      out.write("								errorElement.textContent = \"\";\r\n");
      out.write("							}\r\n");
      out.write("						});\r\n");
      out.write("\r\n");
      out.write("		document\r\n");
      out.write("				.getElementById('signupForm')\r\n");
      out.write("				.addEventListener(\r\n");
      out.write("						'submit',\r\n");
      out.write("						function(event) {\r\n");
      out.write("							let isValid = true;\r\n");
      out.write("\r\n");
      out.write("							if (!validateField('user_Name', document\r\n");
      out.write("									.getElementById('user_Name').value.trim(),\r\n");
      out.write("									/^[A-Za-z]+$/, 3, 50,\r\n");
      out.write("									\"User Name must be between 3 and 50 characters long and contain only letters\"))\r\n");
      out.write("								isValid = false;\r\n");
      out.write("							if (!validateField('userMobileNumber', document\r\n");
      out.write("									.getElementById('userMobileNumber').value\r\n");
      out.write("									.trim(), /^[6-9][0-9]{9}$/, null, null,\r\n");
      out.write("									\"Mobile number must start with 6, 7, 8, or 9 and be exactly 10 digits long\"))\r\n");
      out.write("								isValid = false;\r\n");
      out.write("							if (!validateField('userEmail', document\r\n");
      out.write("									.getElementById('userEmail').value.trim(),\r\n");
      out.write("									/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, null, null,\r\n");
      out.write("									\"Enter a valid email address\"))\r\n");
      out.write("								isValid = false;\r\n");
      out.write("							if (!validateField('userRole', document\r\n");
      out.write("									.getElementById('userRole').value.trim(),\r\n");
      out.write("									null, null, null, \"Please select your role\"))\r\n");
      out.write("								isValid = false;\r\n");
      out.write("\r\n");
      out.write("							let password = document\r\n");
      out.write("									.getElementById('userPassword').value;\r\n");
      out.write("							let validation = validatePassword(password);\r\n");
      out.write("							let passwordError = document\r\n");
      out.write("									.getElementById('userPasswordError');\r\n");
      out.write("							if (!validation.lengthValid) {\r\n");
      out.write("								passwordError.textContent = \"Password must be at least 8 characters long\";\r\n");
      out.write("								isValid = false;\r\n");
      out.write("							} else if (!validation.containsDigit) {\r\n");
      out.write("								passwordError.textContent = \"Password must include at least one digit\";\r\n");
      out.write("								isValid = false;\r\n");
      out.write("							} else if (!validation.containsUpper) {\r\n");
      out.write("								passwordError.textContent = \"Password must include at least one uppercase letter\";\r\n");
      out.write("								isValid = false;\r\n");
      out.write("							} else if (!validation.containsLower) {\r\n");
      out.write("								passwordError.textContent = \"Password must include at least one lowercase letter\";\r\n");
      out.write("								isValid = false;\r\n");
      out.write("							} else if (!validation.containsSpecial) {\r\n");
      out.write("								passwordError.textContent = \"Password must include at least one special character (@, $, !, %, *, ?, &)\";\r\n");
      out.write("								isValid = false;\r\n");
      out.write("							} else {\r\n");
      out.write("								passwordError.textContent = \"\";\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							if (document.getElementById('confirmPassword').value !== password) {\r\n");
      out.write("								document.getElementById('confirmPasswordError').textContent = \"Passwords do not match\";\r\n");
      out.write("								isValid = false;\r\n");
      out.write("							} else {\r\n");
      out.write("								document.getElementById('confirmPasswordError').textContent = \"\";\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							if (!isValid) {\r\n");
      out.write("								event.preventDefault(); // Prevent form submission if validation fails\r\n");
      out.write("							}\r\n");
      out.write("						});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
